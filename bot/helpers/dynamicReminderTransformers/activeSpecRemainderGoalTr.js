const getFormattedDateFromDate = require("../getFormattedDateFromDate");

function activeSpecRemainderGoalTr(reminder) {
  try {
    const goals = reminder.data;

    console.log("activeSpecRemainderGoalTr: goals", goals);

    const initialBody = [
      {
        type: "TextBlock",
        text: "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–≥–∞–¥—É—é –ø—Ä–æ —Ç–≤–æ—ó —Ü—ñ–ª—ñ",
        size: "large",
        weight: "bolder",
      },
    ];

    const newGoals = goals.map(({ name, deadline }) => {
      const formattedDate = getFormattedDateFromDate(deadline);
      return [
        {
          type: "TextBlock",
          text: name,
          wrap: true,
          weight: "bolder",
        },
        {
          type: "FactSet",
          facts: [
            {
              title: "–î–µ–¥–ª–∞–π–Ω:",
              value: formattedDate,
            },
          ],
        },
      ];
    });

    console.log("activeSpecRemainderGoalTr: newGoals", newGoals);

    const flatGoals = newGoals.flat();
    flatGoals.forEach((elem) => initialBody.push(elem));

    console.log("activeSpecRemainderGoalTr: flatGoals", flatGoals);

    initialBody.push({
      type: "TextBlock",
      text: "üí° –ö–∞—Ä º—î—Ä–Ω–∏–π –ø–ª–∞–Ω - —Ü–µ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î –∑–Ω–∞–∏ÃÜ—Ç–∏ –Ω–∞–∏ÃÜ–∫—Ä–∞—â—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –º—ñ–∂ –æ—Å–æ–±–∏—Å—Ç–∏–º–∏ —Ü—ñ–ª—è–º–∏, –Ω–∞–≤–∏–∫–∞–º–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞ —Ç–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏, —â–æ —î —É –∫–æ–º–ø–∞–Ω—ñ—ñÃà.",
      wrap: true,
    });

    console.log("activeSpecRemainderGoalTr: initialBody at end", initialBody);

    return initialBody;
  } catch (error) {
    console.log(error.message);
    console.log("activeSpecRemainderGoalTr: Failed to trnsform card.");
    return null;
  }
}

module.exports = activeSpecRemainderGoalTr;
